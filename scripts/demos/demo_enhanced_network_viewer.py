#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å–µ—Ç–∏
—Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π —Å –ë–î
"""

import sys
import os
import tkinter as tk
from tkinter import messagebox
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))


def demonstrate_enhanced_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞"""
    print("=" * 80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ü–û–ö–†–ê–©–ï–ù–û–ì–û –Ü–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ì–û –í–Ü–ó–£–ê–õ–Ü–ó–ê–¢–û–†–ê –ú–ï–†–ï–ñ–Ü")
    print("=" * 80)
    
    print("\n–ù–û–í–Ü –ú–û–ñ–õ–ò–í–û–°–¢–Ü:")
    print("-" * 50)
    print("–§–æ—Ä–º–∏ –≤—É–∑–ª—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–≤'—è–∑–∫—ñ–≤ (degree):")
    print("   ‚Ä¢ –ö–æ–ª–æ (d‚â§2) - –ø—Ä–æ—Å—Ç–∏–π –≤—É–∑–æ–ª")
    print("   ‚Ä¢ –¢—Ä–∏–∫—É—Ç–Ω–∏–∫ (d=3) - –≤—É–∑–æ–ª –∑ 3 –∑–≤'—è–∑–∫–∞–º–∏")
    print("   ‚Ä¢ –ö–≤–∞–¥—Ä–∞—Ç (d=4) - –≤—É–∑–æ–ª –∑ 4 –∑–≤'—è–∑–∫–∞–º–∏")
    print("   ‚Ä¢ –ü'—è—Ç–∏–∫—É—Ç–Ω–∏–∫ (d=5) - –≤—É–∑–æ–ª –∑ 5 –∑–≤'—è–∑–∫–∞–º–∏")
    print("   ‚Ä¢ –®–µ—Å—Ç–∏–∫—É—Ç–Ω–∏–∫ (d‚â•6) - –≤—É–∑–æ–ª –∑ 6+ –∑–≤'—è–∑–∫–∞–º–∏")
    
    print("–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:")
    print("   ‚Ä¢ –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ (hover)")
    print("   ‚Ä¢ –ü–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—É–∑–ª—ñ–≤ (drag & drop)")
    print("   ‚Ä¢ –í–∏–¥—ñ–ª–µ–Ω–Ω—è –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –≤—É–∑–ª—ñ–≤ –ø—Ä–∏ –∫–ª—ñ–∫—É")
    print("   ‚Ä¢ –ü–ª–∞–≤–Ω—ñ –∞–Ω—ñ–º–∞—Ü—ñ—ó –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö")
    print("   ‚Ä¢ –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –∫–æ–ª–µ—Å–∏–∫–æ–º –º–∏—à—ñ")
    
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ –ë–î:")
    print("   ‚Ä¢ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ .db —Ñ–∞–π–ª–∏")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö")
    print("   ‚Ä¢ –§—É–Ω–∫—Ü—ñ—è render_network_from_db()")
    print("   ‚Ä¢ –°–ª–æ–≤–Ω–∏–∫–æ–≤–µ —Å—Ö–æ–≤–∏—â–µ Python")
    
    print("–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É:")
    print("   ‚Ä¢ –í—Å—ñ —Ä–µ–∂–∏–º–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è")
    print("   ‚Ä¢ –ê–Ω–∞–ª—ñ–∑ –∑–≤'—è–∑–Ω–æ—Å—Ç—ñ")
    print("   ‚Ä¢ –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ")
    print("   ‚Ä¢ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –æ—Å–Ω–æ–≤–Ω–∏–º –¥–æ–¥–∞—Ç–∫–æ–º")


def test_enhanced_viewer():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä"""
    print("\n–¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–û–ö–†–ê–©–ï–ù–û–ì–û –í–Ü–ó–£–ê–õ–Ü–ó–ê–¢–û–†–ê:")
    print("-" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä
        from src.gui.enhanced_interactive_network_viewer import EnhancedInteractiveNetworkViewer
        
        print("–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        
        # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä
        viewer = EnhancedInteractiveNetworkViewer(root, None)
        print("–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏–º–µ—Ä–∞ —Å–µ—Ç–∏
        viewer._load_sample_network()
        print("–ü—Ä–∏–∫–ª–∞–¥ –º–µ—Ä–µ–∂—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–ø–µ–Ω–µ–π —É–∑–ª–æ–≤
        viewer._update_node_degrees()
        print("–°—Ç—É–ø–µ–Ω—ñ –≤—É–∑–ª—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ç–∏
        network_data = viewer.get_network_data()
        print(f"–î–∞–Ω—ñ –º–µ—Ä–µ–∂—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ: {len(network_data['nodes'])} –≤—É–∑–ª—ñ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—ã —É–∑–ª–æ–≤
        for node_data in network_data['nodes']:
            degree = node_data.get('degree', 0)
            shape = viewer._get_node_shape(degree)
            print(f"  –í—É–∑–æ–ª {node_data['id']}: degree={degree}, —Ñ–æ—Ä–º–∞={shape}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Å–≤—è–∑–Ω–æ—Å—Ç–∏
        try:
            viewer._analyze_connectivity()
            print("‚úì –ê–Ω–∞–ª—ñ–∑ –∑–≤'—è–∑–Ω–æ—Å—Ç—ñ –ø—Ä–∞—Ü—é—î")
        except Exception as e:
            print(f"‚ö† –ê–Ω–∞–ª—ñ–∑ –∑–≤'—è–∑–Ω–æ—Å—Ç—ñ –Ω–µ –ø—Ä–∞—Ü—é—î: {e}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
        test_db_filename = "test_network.db"
        try:
            viewer._save_network_to_db(test_db_filename)
            print(f"‚úì –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –ë–î {test_db_filename} –ø—Ä–∞—Ü—é—î")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –ë–î
            viewer.render_network_from_db(test_db_filename)
            print(f"‚úì –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ë–î {test_db_filename} –ø—Ä–∞—Ü—é—î")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            if os.path.exists(test_db_filename):
                os.remove(test_db_filename)
                print("‚úì –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –ë–î –≤–∏–¥–∞–ª–µ–Ω–æ")
                
        except Exception as e:
            print(f"‚ö† –†–æ–±–æ—Ç–∞ –∑ –ë–î –Ω–µ –ø—Ä–∞—Ü—é—î: {e}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
        root.destroy()
        
        print("\n" + "=" * 50)
        print("–í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û –£–°–ü–Ü–®–ù–û!")
        print("=" * 50)
        
        return True
        
    except Exception as e:
        print(f"‚úó –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ: {e}")
        return False


def test_main_window_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≥–ª–∞–≤–Ω—ã–º –æ–∫–Ω–æ–º"""
    print("\n–¢–ï–°–¢–£–í–ê–ù–ù–Ø –Ü–ù–¢–ï–ì–†–ê–¶–Ü–á –ó –ì–û–õ–û–í–ù–ò–ú –í–Ü–ö–ù–û–ú:")
    print("-" * 50)
    
    try:
        from src.gui.main_window import MainWindow
        
        print("‚úì –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        
        main_window = MainWindow(root, {})
        print("‚úì –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω
        viewer_type = type(main_window.network_viewer).__name__
        print(f"‚úì –¢–∏–ø –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä–∞: {viewer_type}")
        
        if viewer_type == "EnhancedInteractiveNetworkViewer":
            print("‚úì –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ –≤ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ")
        elif viewer_type == "InteractiveNetworkViewer":
            print("‚ö† –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –±–∞–∑–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä")
        else:
            print("‚ö† –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑–≤–∏—á–∞–π–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä (fallback)")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
        root.destroy()
        
        print("‚úì –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –≥–æ–ª–æ–≤–Ω–∏–º –≤—ñ–∫–Ω–æ–º –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚úó –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∑ –≥–æ–ª–æ–≤–Ω–∏–º –≤—ñ–∫–Ω–æ–º: {e}")
        return False


def show_enhanced_demo():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞"""
    try:
        from src.gui.main_window import MainWindow
        
        root = tk.Tk()
        main_window = MainWindow(root, {})
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        messagebox.showinfo("–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤–∏–π!", 
            "–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä –º–µ—Ä–µ–∂—ñ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–æ!\n\n"
            "–ù–û–í–Ü –ú–û–ñ–õ–ò–í–û–°–¢–Ü:\n"
            "‚Ä¢ –§–æ—Ä–º–∏ –≤—É–∑–ª—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–≤'—è–∑–∫—ñ–≤\n"
            "‚Ä¢ –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ\n"
            "‚Ä¢ –ü–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –≤—É–∑–ª—ñ–≤\n"
            "‚Ä¢ –í–∏–¥—ñ–ª–µ–Ω–Ω—è –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –≤—É–∑–ª—ñ–≤\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ .db\n"
            "‚Ä¢ –ü–ª–∞–≤–Ω—ñ –∞–Ω—ñ–º–∞—Ü—ñ—ó\n"
            "‚Ä¢ –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –∫–æ–ª–µ—Å–∏–∫–æ–º\n\n"
            "–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ü–∞–Ω–µ–ª—å –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó' ‚Üí '–¢–æ–ø–æ–ª–æ–≥—ñ—è' –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!")
        
        root.mainloop()
        
    except Exception as e:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("–¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–û–ö–†–ê–©–ï–ù–û–ì–û –Ü–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ì–û –í–Ü–ó–£–ê–õ–Ü–ó–ê–¢–û–†–ê –ú–ï–†–ï–ñ–Ü")
    print("=" * 80)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    demonstrate_enhanced_features()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_results = []
    
    test_results.append(test_enhanced_viewer())
    test_results.append(test_main_window_integration())
    
    # –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\n" + "=" * 80)
    print("–ü–Ü–î–°–£–ú–ö–ò –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    print("=" * 80)
    
    passed_tests = sum(test_results)
    total_tests = len(test_results)
    
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç—ñ–≤: {passed_tests}/{total_tests}")
    
    if passed_tests == total_tests:
        print("üéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û –£–°–ü–Ü–®–ù–û!")
        print("\n–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä –º–µ—Ä–µ–∂—ñ –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
        try:
            response = input("\n–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä–∞? (y/n): ").lower().strip()
            if response in ['y', 'yes', '—Ç–∞–∫', '—Ç']:
                show_enhanced_demo()
        except KeyboardInterrupt:
            print("\n–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    else:
        print("‚ùå –î–ï–Ø–ö–Ü –¢–ï–°–¢–ò –ù–ï –ü–†–û–ô–î–ï–ù–û")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–º–∏–ª–∫–∏ –≤–∏—â–µ —Ç–∞ –≤–∏–ø—Ä–∞–≤—Ç–µ —ó—Ö.")
    
    print("\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    print("-" * 20)
    print("1. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –æ—Å–Ω–æ–≤–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫: python main.py")
    print("2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ü–∞–Ω–µ–ª—å –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó' ‚Üí '–¢–æ–ø–æ–ª–æ–≥—ñ—è'")
    print("3. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó")
    print("4. –¢–µ—Å—Ç—É–π—Ç–µ —Ñ–æ—Ä–º–∏ –≤—É–∑–ª—ñ–≤ —Ç–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
    print("5. –ï–∫—Å–ø–æ—Ä—Ç—É–π—Ç–µ –¥–∞–Ω—ñ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ")
    print("6. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ .db")


if __name__ == "__main__":
    main()
